// <auto-generated />
using System;
using Crud_FP.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Crud_FP.Migrations
{
    [DbContext(typeof(ApplicationDBContext))]
    [Migration("20210615025647_test2")]
    partial class test2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.7")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Crud_FP.Models.Flowpoint_Support_Company", b =>
                {
                    b.Property<int>("ICompanyID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("BlsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DtCreated")
                        .HasColumnType("datetime2");

                    b.Property<string>("VCity")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("VCompanyName")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("VContact")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("VCountry")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("VEmail")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("VFax")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("VPhone")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("VPostalCode")
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<string>("VProvince")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("VStreet1")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("VStreet2")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("ICompanyID");

                    b.ToTable("Flowpoint_Support_Companies");
                });

            modelBuilder.Entity("Crud_FP.Models.Flowpoint_Support_Ticket", b =>
                {
                    b.Property<int>("ITicketID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("BlsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime>("DtCreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DtModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ICreatedBy")
                        .HasColumnType("int");

                    b.Property<int>("IModifiedBy")
                        .HasColumnType("int");

                    b.Property<int>("IVendorID")
                        .HasColumnType("int");

                    b.Property<string>("VTicketMessage")
                        .IsRequired()
                        .HasMaxLength(3000)
                        .HasColumnType("nvarchar(3000)");

                    b.HasKey("ITicketID");

                    b.HasIndex("IVendorID");

                    b.ToTable("Flowpoint_Support_Tickets");
                });

            modelBuilder.Entity("Crud_FP.Models.Flowpoint_Support_Vendor", b =>
                {
                    b.Property<int>("IVendorID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("BlsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DtCreated")
                        .HasColumnType("datetime2");

                    b.Property<int>("ICompanyID")
                        .HasColumnType("int");

                    b.Property<string>("VCity")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("VContact")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("VCountry")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("VEmail")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("VFax")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("VPhone")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("VPostalCode")
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<string>("VProvince")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("VStreet1")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("VStreet2")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("VVendorName")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.HasKey("IVendorID");

                    b.HasIndex("ICompanyID");

                    b.ToTable("Flowpoint_Support_Vendors");
                });

            modelBuilder.Entity("Crud_FP.Models.Flowpoint_Support_Ticket", b =>
                {
                    b.HasOne("Crud_FP.Models.Flowpoint_Support_Vendor", "Flowpoint_Support_Vendor")
                        .WithMany("Flowpoint_Support_Tickets")
                        .HasForeignKey("IVendorID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Flowpoint_Support_Vendor");
                });

            modelBuilder.Entity("Crud_FP.Models.Flowpoint_Support_Vendor", b =>
                {
                    b.HasOne("Crud_FP.Models.Flowpoint_Support_Company", "Flowpoint_Support_Company")
                        .WithMany("Flowpoint_Support_Vendors")
                        .HasForeignKey("ICompanyID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Flowpoint_Support_Company");
                });

            modelBuilder.Entity("Crud_FP.Models.Flowpoint_Support_Company", b =>
                {
                    b.Navigation("Flowpoint_Support_Vendors");
                });

            modelBuilder.Entity("Crud_FP.Models.Flowpoint_Support_Vendor", b =>
                {
                    b.Navigation("Flowpoint_Support_Tickets");
                });
#pragma warning restore 612, 618
        }
    }
}
